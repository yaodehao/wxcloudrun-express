<template><div><v-card max-width="600" heigh="600" class="mx-auto" > <v-toolbar :color="d_attr.tbcolor" dark dense> <v-toolbar-title>{{d_attr.title}}</v-toolbar-title> <v-spacer></v-spacer>
          <v-menu bottom left>
            <template v-slot:activator="{ on }"><v-btn dark icon  v-on="on" ><v-icon>mdi-dots-vertical</v-icon></v-btn></template>
            <v-list>
                <v-list-item @click="d_attr.tbcolor='cyan'">默认</v-list-item>
                <v-list-item @click="d_attr.tbcolor='#1565C0'">蓝色</v-list-item>
                <v-list-item @click="d_attr.tbcolor='#E53935'">红色</v-list-item>
                <v-list-item @click="d_attr.tbcolor='#EF6C00'">橙色</v-list-item>
				<v-list-item @click="d_attr.tbcolor='#37474F'">灰色</v-list-item>
				<v-list-item @click="d_attr.tbcolor='#6D4C41'">棕色</v-list-item>
				<v-list-item @click="d_attr.tbcolor='#2E7D32'">绿色</v-list-item>
				<v-divider></v-divider>
				<v-list-item @click="newItem()"><v-list-item-title>新增数据</v-list-item-title></v-list-item>
              <v-divider></v-divider>
               <v-list-item @click="init()">刷新数据</v-list-item-title></v-list-item>
            </v-list>
          </v-menu>
</v-toolbar>  <v-data-table   dense  :headers="headers" :items="d_items" class="elevation-1" mobile-breakpoint="200" hide-default-footer>    <template v-slot:top><!-- 编辑的对话框-->        <v-dialog v-model="dialog" max-width="350" persistent >          <v-card>          <v-card-title  class="headline grey lighten-2" primary-title><v-btn rounded color="primary" dark @click="close()"> <v-icon>mdi-close</v-icon>取消 </v-btn><v-spacer></v-spacer><v-btn rounded color="primary" dark @click="save()"> <v-icon>mdi-alert-circle</v-icon>保存</v-btn> </v-card-title>            <v-card-title> <span class="headline">{{formTitle }}</span> </v-card-title>            <v-card-text>              <v-container>                <v-row>	              <v-text-field v-model="editedItem.C1" label="序号"></v-text-field><br>                  <v-text-field v-model="editedItem.C2" label="名称"></v-text-field><br>                  <v-text-field v-model="editedItem.C3" label="数量" type="number"></v-text-field><br>                </v-row>              </v-container>            </v-card-text>          </v-card>        </v-dialog><!-- 编辑的对话框-->    </template>    <template v-slot:item.action="{item }">      <v-icon small  @click="editItem(item)"  color="primary" >mdi-lead-pencil</v-icon>      <v-icon small  @click="deleteItem(item)" color="warning" >mdi-close</v-icon>    </template>    <template v-slot:no-data>      <v-btn color="primary" @click="initialize">没有数据，刷新</v-btn>    </template>  </v-data-table>  </v-card><br><v-card  width="1500px">  <v-sparkline padding="10" :value="value" :labels="labels" type=bar label-size="9" :color="d_attr.tbcolor"></v-sparkline></v-card><iframe ID="frame1" name="frame1" src='echart_bar.html?sn=Sunday December 19 2021' width="100%" height="400px" frameborder="no" scrolling="no" allowtransparency="yes"></iframe>  <div id="container" style="height: 100%"></div></div></template><script>const gradients=[['#222'],['#42b3f4'],['red','orange','yellow'],['purple','violet'],['#00c6ff','#F0F','#FF0'],['#f72047','#ffd200','#1feaea'],]module.exports={    data: () => ({      dialog: false,	  d_ID:0,	  d_attr:{tbcolor:'orange',title:'图表演示'},      d_items: [],      editedIndex: -1,      editedItem:  {C1:'',C2:'',C3: 0},      defaultItem: {C1:'',C2:'',C3: 0},      headers:[{text:'编号',value:'C1'},{text:'名称',value:'C2'},{text:'数量',value:'C3'},{text:'',value:'action',sortable:false },],      //sparkline------------      lineWidth: 2,      labelSize: 9,      radius: 8,      padding: 8,      lineCap: 'round',      gradient: gradients[1],      value:[],      labels:[],      gradientDirection: 'top',      gradients,      fill: false,      type: 'trend',      autoLineWidth: false,    }),    computed: {      formTitle(){return this.editedIndex === -1 ? '新增记录：' : '修改数据：'      },      chartdata(){this.value=[];this.labels=[]; //for (var i=0;i<this.d_items.length;i++) { this.value.push(this.d_items[i].C3);}      			this.d_items.forEach(v=>{this.value.push(parseFloat(v.C3));this.labels.push(v.C2);});      			this.gradient=[this.d_attr.tbcolor];      			return '';},      }, // computed:    watch: {      dialog (val) {val || this.close() },      },    created(){this.initialize(); app.tabobj[app.tabobj.length -1]=this;},    methods: {      	GetData(parm){	      	axios.post('/common/data_r.asp?r_tab=cw_location&r_fd=C2$C3&r_order=ID', {page:'1',rows:'10'})			.then(response=>{this.d_items =response.data.rows;  			}).catch(function (error) {app.ShowAlert('warning','读取数据库失败！',error); })		},//getdata      newItem(){ this.editedIndex=-1;	 this.editedItem = Object.assign({},this.defaultItem);	this.dialog=true;},      editItem (item) {        this.editedIndex = this.d_items.indexOf(item)        this.editedItem = Object.assign({},item)        this.dialog = true      },      deleteItem (item) {        const index = this.d_items.indexOf(item)        confirm('确认删除？') && this.d_items.splice(index,1)      },      close () {        this.dialog = false        setTimeout(() => {          this.editedItem = Object.assign({},this.defaultItem)          this.editedIndex = -1        },300)      },      save () {        if (this.editedIndex > -1) {          Object.assign(this.d_items[this.editedIndex],this.editedItem)        } else {          this.d_items.push(this.editedItem)        }        this.close()      },     initialize () {        this.d_items = [               {C1:'1',C2: '博罗',C3:9},               {C1:'2',C2: '惠东',C3:3},               {C1:'3',C2: '龙门',C3:6},               {C1:'4',C2: '大亚湾',C3:2},               {C1:'5',C2: '惠阳',C3: 8},               {C1:'6',C2: '仲恺',C3:3},               {C1:'7',C2: '惠城',C3:6},        ]      },    },  }</script>