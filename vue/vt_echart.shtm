<template><div><v-card max-width="600" class="mx-auto" >	 <v-toolbar :color="d_attr.tbcolor" dark dense> <v-toolbar-title>{{d_attr.title}}</v-toolbar-title> <v-spacer></v-spacer>
          <v-menu bottom left>
            <template v-slot:activator="{ on }"><v-btn dark icon  v-on="on" >切换<v-icon>mdi-dots-vertical</v-icon></v-btn></template>
            <v-list>
                <v-list-item v-if="charType!=0" @click="charType=1;reDraw()">柱形图（→）</v-list-item>
                <v-list-item v-if="charType!=0" @click="charType=2;reDraw()">柱形图（ ↑ ）</v-list-item>
                <v-list-item v-if="charType!=0" @click="charType=3;reDraw()">曲线图</v-list-item>
                <v-list-item v-if="charType!=0" @click="charType=4;reDraw()">饼状图</v-list-item>                
                <v-divider></v-divider>
                <v-list-item @click="d_attr.tbcolor='cyan'">默认</v-list-item>
                <v-list-item @click="d_attr.tbcolor='#1565C0'">蓝色</v-list-item>
                <v-list-item @click="d_attr.tbcolor='#E53935'">红色</v-list-item>
                <v-list-item @click="d_attr.tbcolor='#EF6C00'">橙色</v-list-item>
				<v-list-item @click="d_attr.tbcolor='#37474F'">灰色</v-list-item>
				<v-list-item @click="d_attr.tbcolor='#6D4C41'">棕色</v-list-item>
				<v-list-item @click="d_attr.tbcolor='#2E7D32'">绿色</v-list-item>
				<v-divider></v-divider>				
              <v-list-item @click="newItem()"><v-list-item-title>新增数据</v-list-item-title></v-list-item>
              <v-divider></v-divider>
               <v-list-item @click="init()">刷新数据</v-list-item-title></v-list-item>               				
            </v-list>
          </v-menu>
</v-toolbar><v-data-table   dense  :headers="headers" :items="d_items" class="elevation-1" mobile-breakpoint="200" hide-default-footer><template v-slot:top><!-- 编辑的对话框-->    <v-dialog v-model="EditDialog" max-width="350" persistent >      <v-card><!-- dialog按钮---------- --><v-card-title class="headline" style="background:#F1FAFA">	<v-btn rounded color="primary" dark @click="close()" small><v-icon>mdi-keyboard-return</v-icon>返回</v-btn><v-spacer></v-spacer>	<v-btn v-if="(editedIndex>-1)&&editable" rounded small color="primary" dark @click="deleteItem(d_items[editedIndex]);"><v-icon>mdi-delete</v-icon>删除</v-btn><v-spacer></v-spacer>	 	<v-btn v-if="crudToolbar==false"  rounded color="primary" dark @click="close()" small><v-icon>mdi-keyboard-return</v-icon>返回</v-btn>	<v-btn v-else-if="editable" rounded color="primary" dark @click="saveData()" small><v-icon>mdi-alert-circle</v-icon>保存[{{editedItem.ID}}]</v-btn>	<v-btn v-else               rounded color="primary" dark @click="editable=true" small><v-icon>mdi-alert-circle</v-icon>开始编辑</v-btn></v-card-title>        <v-card-text>              <v-text-field v-model="editedItem.C1" label="序号"></v-text-field><br>              <v-text-field v-model="editedItem.C2" label="名称"></v-text-field><br>              <v-text-field v-model="editedItem.C3" label="数量" type="number"></v-text-field><br>        </v-card-text>      </v-card>    </v-dialog><!-- 编辑的对话框--></template><template v-slot:item.action="{item }"><v-icon small  @click="editItem(item)"  color="primary" >mdi-lead-pencil</v-icon></template><template v-slot:no-data><v-btn color="primary" @click="init">没有数据，刷新</v-btn></template></v-data-table><div id="E" style="height:400px;width:100%"></div>  <!-- echart插件--></v-card></div></template><script>module.exports={data(){return {		varWin:{}, //H5的window全局变量 	itemsPerPageArray: [5, 10, 15],	search:'',searchdb:'',	filter: {},	sortDesc: false,	page: 1,	itemsPerPage: 5,	sortBy:'ID',		EditDialog: false,	FlowDialog: false,	editable:false,	cardmode:true,	addcount:0, //新记录，ID默认值	editedIndex: -1,	editedItem: {},	d_items:[],		ID0:0,ID1:0, //最小ID	crudPager:true,  //页码  	crudToolbar:true, //工具栏  	crudPanel:false,  //工具栏下面的panel	queryObj:{},      //url参数	d_type:'',			b_folder:false,//目录（文件夹）						d_attr:{tbcolor:'orange',title:'图表演示'},	url_r:'/common/data_r.asp',	url_s:'/common/data_s.asp',	url_d:'/common/data_d.asp',	test_data:'test_data.html',	parm_r:{r_page:1,r_rows:20,r_order:'ID$desc',r_searchdb:'',r_where:'',			r_tab:'cm_CMS',r_fd:'ID$avatar$d_title$subtitle',r_fd0:'',r_fd1:'avatar$d_title$subtitle',},           defaultItem: {C1:'',C2:'',C3: 0},    headers:[{text:'编号',value:'C1'},{text:'名称',value:'C2'},{text:'数量',value:'C3'},{text:'',value:'action',sortable:false },],	chartHeight:400, //图表高端	        values:[], //XY统计    labels:[],	myChart:{},   //指向echart控件	charType:4,   //1纵向X轴, 4pie    }},computed:{formTitle(){return this.editedIndex === -1 ? '新增记录：' : '修改数据：'}, }, // computed:created(){ app.tabobj[app.tabobj.length -1]=this ;},    methods: {	reDraw(){ let option={};		this.values=[];this.labels=[];    	this.d_items.forEach(v=>{this.values.push(parseFloat(v.C3));	this.labels.push(v.C2);});      	if(this.chartHeight<100+50*this.values.length){this.chartHeight=100+50*this.values.length;}      					switch(this.charType) {     	case 1:			option={title:{ text: '', subtext:'纵向柱形图',left:'center' },				xAxis:{type:'value'},	yAxis:{type:'category',data:[]},				series:[{data:[],type:'bar',showBackground:true,backgroundStyle:{color:'rgba(220,220,220,0.8)'}}]};			option.yAxis.data	 =this.labels;   //label			option.series[0].data=this.values;        	break;     	case 2:  //默认横向柱形图			option={title:{ text: '', subtext:'横向柱形图',left:'center' },				yAxis:{type:'value'},xAxis:{type:'category',data:['星期一','yaodh']},				series:[{data:[75,24],type:'bar',showBackground:true,backgroundStyle:{color:'rgba(220,220,220,0.8)'}}]};			option.xAxis.data	 =this.labels;  			option.series[0].data=this.values;        	break;     	case 3:			option={title:{ text: '', subtext:'曲线图',left:'center' },				yAxis:{type:'value'},xAxis:{type:'category',data:[]},				series:[{data:[],type:'line',showBackground:true,backgroundStyle:{color:'rgba(220,220,220,0.8)'}}]};			option.xAxis.data	 =this.labels;   //label			option.series[0].data=this.values;        	break;     	case 4:  //饼图			option = {title:{ text: '', subtext: '饼图展示',left:'center' }, 				tooltip:{ trigger: 'item', formatter: '{a} <br/>{b} : {c} ({d}%)' },// 				legend: { type: 'scroll', orient: 'vertical', right: 10, top: 20, bottom: 20, data:[]}, 				series: [ { name:this.d_attr.title, type: 'pie', radius: '55%', center: ['50%', '50%'], data:[],  				emphasis: { itemStyle: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' } } } ]		}; 			for(i=0; i<this.values.length; i++){option.series[0].data.push({name:this.labels[i],value:this.values[i]})}		  	break;        	     	default:   			} 		option.title.text=this.d_attr.title+'（右上角可切换图形）';		this.myChart.setOption(option, true);        				},	afterData(){app.ShowSnack('eChart数据加载完成！')},		autoDraw(){setTimeout(()=>{this.reDraw();this.autoDraw()},2000); },	editItem(item){ app.editItem(this,item);this.EditDialog=true;}, //编辑	newItem() { app.newItem(this); this.EditDialog=true;},	deleteItem(item){this.EditDialog=false; app.deleteItem(this,item);this.reDraw();},	saveData(){		 this.EditDialog=false; app.saveData(this);		  this.reDraw();}, 	//保存	close(){this.EditDialog = false;},	init(){if(gv_db!=''){app.getData(this);}else{app.getTestData(this);} 	setTimeout(() =>{this.reDraw()},300) ;},    },//methods	mounted(){this. myChart = echarts.init(document.getElementById("E"),);	this.init();}, //let this_=this;  } </script>