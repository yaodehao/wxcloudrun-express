<template><div>	<v-alert border="left"   colored-border color="warning" elevation="6" align="center" ><v-row dense>	<v-col cols="4" lg="3" @click="LoadVue('日常值班','vt_txl_ywa' , 'vt_txl.shtm?onduty1=1')">	<v-hover v-slot:default="{hover}"><v-card :elevation="hover?6:0" :class="{'on-hover':hover }">		<v-icon large color="green">mdi-phone-classic</v-icon><br>		日常值班</v-card></v-hover></v-col>		<v-col cols="4" lg="3" @click="LoadVue('应急值班','vt_txl_zwwy' , 'vt_txl.shtm?onduty2=1')">	<v-hover v-slot:default="{hover}"><v-card :elevation="hover?6:0" :class="{'on-hover':hover }">		<v-icon large color="blue">mdi-phone-classic</v-icon><br>应急值班</v-card></v-hover></v-col>		<v-col cols="4" lg="3" @click="LoadVue('干部名片','vt_txl' , 'vt_txl.shtm?expert=1')">	<v-hover v-slot:default="{hover}"><v-card :elevation="hover?6:0" :class="{'on-hover':hover }">		<v-icon large color="blue">mdi-account-multiple</v-icon><br>村干部名片</v-card></v-hover></v-col>	</v-row></v-alert><!-- 信息推送、视频会商   --><v-alert border="left"   colored-border color="green lighten-2" elevation="6" align="center"><!-- 九宫格菜单 --><v-row dense>	<v-col cols="4" lg="3"  @click="SdkMsg()">	<v-hover v-slot:default="{hover}"><v-card :elevation="hover?6:0" :class="{'on-hover':hover }">		<v-icon large color="green lighten-1">mdi-chat-alert</v-icon><br>信息推送</v-card></v-hover></v-col><v-col cols="4" lg="3" @click="LoadVueParm(this.appSN,0,0,'视频直播','vt_living')">	<v-hover v-slot:default="{hover}"><v-card :elevation="hover?6:0" :class="{'on-hover':hover }">		<v-icon large color="green lighten-1">mdi-file-video-outline</v-icon><br>视频直播</v-card></v-hover></v-col><v-col cols="4" lg="3"   @click="TmpStr('','',this.g_truename+'发起的会议');LoadVueParm(this.appSN,0,0,'视频会商','vt_meeting')">	<v-hover v-slot:default="{hover}"><v-card :elevation="hover?6:0" :class="{'on-hover':hover }">		<v-icon large color="green lighten-1">mdi-video-box</v-icon><br>视频会商</v-card></v-hover></v-col>	</v-row></v-alert><!-- 两块九宫格   --><v-alert border="left"   colored-border color="blue lighten-2" elevation="6" align="center"><!-- 九宫格菜单:row 取消了dense --><v-row><template v-for="(item, index) in grids1">		<v-col cols="4" lg="3"  v-if="item.type==0" :key=index @click="LoadVue(item.tag,item.vue)">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 			<v-col cols="4" lg="3"  v-else-if="item.type==3" >		<a :href="item.vuefile"  style="text-decoration:none;"><v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</a></v-col> 			<v-col cols="4" lg="3"  v-else-if="item.type==4" :key=index @click="LoadVue(item.tag,item.vue,item.vuefile)">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 			<v-col cols="4" lg="3"  v-else-if="item.type==5" :key=index :onclick="item.vuefile">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 	<v-col cols="4" lg="3"  v-else-if="item.type==6" :key=index @click="LoadVueParm(item.p1,item.p2,item.p3,item.tag,item.vue)">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 	<v-col cols="4" lg="3"  v-else-if="item.type==7" :key=index @click="LoadVueMemID(item.p1,item.p2,item.tag,item.vue)">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 						</template>		</v-row></v-alert><v-alert border="left"   colored-border color="green lighten-2" elevation="6" align="center"><!-- 九宫格菜单 --><v-row dense>		<v-col  v-if="is_geostart==false" cols="4" lg="3"   onclick="geoStart()">			<v-icon large color="grey">mdi-play-circle-outline</v-icon><br>定位上报</v-col><v-col v-if="is_geostart==true" cols="4" lg="3"   onclick="geoStop()">			<v-icon large color="red">mdi-play-circle-outline</v-icon><br>取消上报</v-col>			<template v-for="(item, index) in grids2">		<v-col cols="4" lg="3"  v-if="item.type==0" :key=index @click="LoadVue(item.tag,item.vue)">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 			<v-col cols="4" lg="3"  v-else-if="item.type==3" >		<a :href="item.vuefile"  style="text-decoration:none;"><v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</a></v-col> 			<v-col cols="4" lg="3"  v-else-if="item.type==4" :key=index @click="LoadVue(item.tag,item.vue,item.vuefile)">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 			<v-col cols="4" lg="3"  v-else-if="item.type==5" :key=index :onclick="item.vuefile">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 		 	<v-col cols="4" lg="3"  v-else-if="item.type==6" :key=index @click="LoadVueParm(item.p1,item.p2,item.p3,item.tag,item.vue)">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 		<v-col cols="4" lg="3"  v-else-if="item.type==7" :key=index @click="LoadVueMemID(item.p1,item.p2,item.tag,item.vue)">		<v-icon :color="item.color" large>{{item.icon}}</v-icon><br>{{item.name}}</v-col> 				</template>		</v-row></v-alert><v-row ><v-col cols="12" sm="6" lg="3" v-for="(com, index) in coms"   :key="index"  align-self="start">	<component :is="com"></component></v-col></v-row><br></div></template><script>module.exports={    data: () => ({	 	coms:[],	 	colors: [ 'indigo', 'pink darken-2', 'red lighten-1', ],       	slides: [ '↖协同系统，欢迎测试！', '↖ 左上角有操作菜单！', '↖ 请点击左上角的菜单！',],       	grids1:[],grids2:[], 		d_users:{ID:-1,vid:'',d_uids:'',d_names:'',d_title:g_truename+'的会议',d_cat:'1',TopTab:'N',TopRow:0,d_type:0,save:1},  //已选择的用户       	 		 	    }),	//data    created(){app.tabobj[app.tabobj.length -1]=this;  this.grids1=app.menus1;	this.grids2=app.menus2;  app.HideBusy();},    mounted(){   //this.LoadVueToHome('vt_richText_portal','vt_richText_portal.shtm?d_type=11');    		},     methods: {		LoadVueToHome(vueName,filename,parm){			var myfile= filename==null ? vueName+'.shtm?portal=true':filename;			app.vueParm=parm;	//参数传递			if( this.coms.indexOf(vueName+'_P')== -1){Vue.component(vueName+'_P',httpVueLoader(myfile));  //vueName +P避免与indx里面注册的名称重复				this.coms.push(vueName+'_P')}		},				//规则：fun2,覆盖fun，fun0插入fun代码前	editItem(item){if(this.EditDialog){return 0 } 		if(typeof(eval(this.editItem2))=='function'){ this.editItem2(item) ; return 0 }				app.editItem(this,item);	this.EditDialog=true; 	}, //编辑				newItem(){ if(typeof(eval(this.newItem2))=='function'){this.newItem2(); return 0}	 			app.newItem(this); this.EditDialog=true;	this.editable=true;       		   if(typeof(eval(this.newInit))=='function'){this.newInit();}	 //执行初始化回调	},	moreItem(){ if(typeof(eval(this.moreItem2))=='function'){this.moreItem2(); return 0}	 			app.moreItem(this);       		  	},		deleteItem(item){ if(typeof(eval(this.deleteItem2))=='function'){this.deleteItem2(item); return 0}	 			app.deleteItem(this,item);this.EditDialog=false;},				saveData(){ if(typeof(eval(this.checkData))=='function'){if(this.checkData()!=1){return 0}}	 			if(typeof(eval(this.saveData2))=='function'){this.saveData2(); return 0}	 			app.saveData(this);}, //保存		close(){if(typeof(eval(this.close2))=='function'){this.close2(); return 0}	 			if(app.sysWin){app.sysWin=false;app.sysWinCom=''; return 0}			if(this.EditDialog){this.EditDialog = false; return 0}			app.DelTab()	},		//init2()>init0()+init() 	init(){ if(typeof(eval(this.init2))=='function'){this.init2(); return 0}			if(typeof(eval(this.init0))=='function'){this.init0();} 	//插入init0()			if(gv_db!=''){app.getData(this);}else{app.getTestData(this);}},//init				openTab(){if(this.parm_r.r_tab=='cm_richtext'){this.LoadVueParm(this.defaultItem.TopTab,this.defaultItem.TopRow,this.defaultItem.d_type,this.d_attr.title,'vt_richText_card') 		}else if(this.parm_r.r_tab=='cm_team'){    this.LoadVueParm(appSN,'0','1','虚拟团队','vt_team') }	 	    		}, //打开本栏目					LoadFolder(CurNode){//加载目录（文件夹）		this.clickedNode=CurNode;		this.defaultItem.topID=CurNode.id;		if(CurNode.id!=0){this.url_r='/common/data_r.asp?r_TopID='+CurNode.id; }//TopID下属检索 //修改app.ShowSnack('这是：'+ID);			else{this.url_r='/common/data_r.asp'; }		this.init();			if(CurNode.children.length){return 0} 	//已刷新				flowParm={page:1,rows:100, d_type:this.defaultItem.d_type,topID:CurNode.id};		axios.post('/common/data_folder.asp',qs.stringify(flowParm) ).then(response=>{			CurNode.childNum=response.data.rows.length;			for (var i=0; i < response.data.rows.length; i++)				{CurNode.children.push({id:response.data.rows[i].ID,name:response.data.rows[i].d_title,childNum:-1,children:[]});}						}).catch((err)=>{app.ShowAlert('warning','读取目录信息出错:',err); })	},			 	nextPage(){  if(this.page + 1 <= this.numberOfPages) this.page += 1},	formerPage(){if(this.page - 1 >= 1) this.page -= 1},	updateItemsPerPage(number) {		this.itemsPerPage = number },	haveAcc(myacc){return app.ACC.indexOf(myacc)>-1}, //是否具备某权限	LoadVue(s1,s2,s3,s4){app.LoadVue(s1,s2,s3,s4);},  //上级APP的函数重新封装	LoadVueACC(s1,s2,s3,s4,s5){app.LoadVueACC(s1,s2,s3,s4,s5);}, 		LoadVueParm(TopTab,TopRow,d_type,tabtitle,vueName,filename,parm){app.LoadVueParm(TopTab,TopRow,d_type,tabtitle,vueName,filename,parm)},	LoadVueMemID(TopTab,TopRow,tabtitle,vueName,filename,parm){app.LoadVueMemID(TopTab,TopRow,tabtitle,vueName,filename,parm)},	LoadVue2Win(t,vueName,filename,parm){app.LoadVue2Win(t,vueName,filename,parm)},		LoadVue2WinParm(TopTab,TopRow,d_type,t,vueName,filename,parm){app.LoadVue2WinParm(TopTab,TopRow,d_type,	t,vueName,filename,parm)},	OpenIfr(title,url){app.OpenIfr(title,url)},	MapByLatLng(title,lat,lng ){app.MapByLatLng(title,lat,lng )},		ShowJson(d){ShowJson(d)},		ShowAlert(Title,Msg,Type){if(Type){app.ShowAlert(Type,Title,Msg)}else{app.ShowAlert('warning',Title,Msg)}},	ShowSnack(Msg,color){app.ShowSnack(Msg,color)},	ObjClass(obj){alert(obj.constructor.name+'：'+obj.constructor)},	Asp2Arr(url,obj,fd){app.Asp2Arr(url,obj,fd)},		ExecFun(fun,p1,p2,p3){window[fun](p1,p2,p3);},//vue中执行window的函数			MyCall(telno,Title,Msg,calleeID){app.MyCall(telno,Title,Msg,calleeID)},//vue 封装	MyCallMulti(CalleeIDwx,CalleeIDdd,Title,Msg){app.MyCallMulti(CalleeIDwx,CalleeIDdd,Title,Msg)},	setTmpStr(item){app.tmpStr2=item.d_mem_name;	app.tmpStr3=item.d_title;	app.tmpStr1=item.d_mem;}, 	TmpStr(s1,s2,s3){app.tmpStr1=s1;	app.tmpStr2=s2;		app.tmpStr3=s3;}, 	SdkMeeting(Title,CalleeID,dtype,save){SdkMeeting(Title,CalleeID,dtype,save)},	SdkMeetingObj(obj){SdkMeetingObj(obj)},	SdkMsg(item){app.SdkMsg(item)},	SdkMsg2Uid(uid,uname,msg){app.SdkMsg2Uid(uid,uname,msg)},	MsgPost(obj){MsgPost(obj)},//发msg，在sdk-wx		sendDing(uids,title){sendDing(uids,title)},//发钉，在sdk-dd				ShowUserPos(id){ShowUserPos(id)},		selectUser(){selectUser(this.d_users)},// 分别在微信与钉钉sdk中	selectUserEx(){selectUserEx(this.d_usersEx)},//外部联系人			openUserProfile(uid){openUserProfile(uid)},	//微信打开profile	user4fd(fd){user4fd(this,fd)},	addr4fd(fd,latlng){app.addr4fd(this,fd,latlng)},		photo4fd(fd){photo4fd(this,fd)},	openPic(url){openPic(url)},	CallObj4Users(){app.tmpObj=this;	app.LoadVue2Win('选择用户','vt_CallObj')},// 分别在微信与钉钉sdk中,从群组中选择用户清单	postReadeded(tab,row,msg){app.postReadeded(tab,row,msg)},	postLog(msg1,msg2){app.postLog(msg1,msg2)},	VarRet(fd){return app[fd]},		 //initParm参数传给app临时变量,setParm临时变量传到Vue实例。	initParm(d_type){app.TopTab=this.parm_r.r_tab;	app.TopRow=this.editedItem.ID;		app.d_type=d_type;},	setParm(){this.defaultItem.TopTab=app.TopTab;	this.defaultItem.TopRow=app.TopRow;		this.defaultItem.d_type=app.d_type;		this.url_r ='/common/data_r.asp?TopTab='+app.TopTab+'&TopRow='+app.TopRow +'&d_type='+app.d_type;	//alert(this.url_r)		},	showColor(t){switch(t){ case 'Ⅰ级':case '红色':return 'error';				case 'Ⅱ级':case '橙色':return 'warning';							case 'Ⅲ级':case '黄色':return 'yellow darken-1'; 	case 'Ⅳ级':case '蓝色':return 'primary'; 	default:return 'green';}},					},//methods    computed: { is_geostart(){return app.geostart },    		 },  }</script>